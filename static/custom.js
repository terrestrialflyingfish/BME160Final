function testSeqs(){
    const seq = "MSIKPEEISSLIKQQIESFQSDVQVQDVGTVIRVGDGIALAHGLENVMAGELLEFSNGVMGMAQNLEENNIGIIILGPYTDIREGDEVKRTGRIMEVPVGEELLGRVVNPLGQPIDGLGPIATTKSRPIESPAPGVMDRKSVHEPLQTGIKSIDTMIPIGRGQRELIIGDRQTGKTAIAIDTILNQKDEDMICIYVAIGQKDSTVAGVVETLRQRGALDYTIVVSASASDPAPMLFLAPYAGVSMGEEFMYNGKHVLVIYDDLSKQASAYRELSLLLRRPPGREAFPGDVFYLHSRLLERAAKLSDAKGGGSITALPFIETQAGDVSAYIPTNVISITDGQIFLQSDLFYSGIRPAVNAGLSVSRVGGSAQIKAMKKVSGTLRLDLAAYRELEAFAQFGSDLDKATQAKLNRGQRTVEVLKQDLHNPLPVEKQVAIIYALTKGFMDDIPVEDVQRFESEFFTFLDHNKKDLLDHIRTTGNLPEDADFKAAIEEFKKGFSASK,MNLRPEEISKVIKEQILQYEHKLETADVGTVIQVGDGIARIHGLENAMAGELLEFPQEVFGMVLNLEEDNVGCVLLGDDTKIVEGDKVKCTGKIVEVPVGDAMVGRVVNSLGHPIDGKGPISTNKTRPAEVKAPGVIERKSVDTPLQTGYKAIDSMIPIGRGQRELIIGDRQTGKTALAVDTMINQKGEDVICIYVAIGQKASTVAQIVSKLQETGAMDYSIVVAATASELAPLQYLAPYTGVTIGEEFMLQGKDVLIIYDDLSKHAVAYRAMSLLLKRPPGREAYPGDVFYLHSRLLERAAKMKDGGSLTALPIIETQAGDVSAYIPTNVISITDGQIFLEGELFYSGIRPAVNPGISVSRVGGAAQIKSMKKVAGPLRIEYAQYRELASFAQFGSDLDDATKAQLAKGERVVELLKQDQYAPMRVEHQVLAIYAITNDYAAKVPVNMIKDYEKSLIEFADVNHKDTLEEIKGKGGLSEEVVEKMRELIEKFTGKYLDELKNA,MKLNPSEISELIKRRIESFDAVAEARNEGTVVSVSDGICRIHGLADAMFGEMLEFPGNTYGMALNLERDSVGAVLLGEYEHISEGDTVKCTGRILEVPVGEGLLGRVVDALGAPSDGKGPIKSEGTEPIEKVAPGVITRQGVDQPVQTGLKAIDSMVPVGRGQRELIIGDRQTGKTAVAIDTIINQRDSGIKCIYVAIGQKNSTVANVVRKLEEHGAMENTIVVSAPAADSAAMQYIAAYAGCAMGEYFRDRGEDALIVYDDLTKQAWAYRQVSLLLRRPPGREAYPGDVFYLHSRLLERAARINAEEVERRTNGQVKGKTGSLTALPIIETQAGDVSAFVPTNVISITDGQIYLETDLFNSGIRPAINAGLSVSRVGGSAQTKVIKKLGGTVRLSLAQYRELAAFAQFASDLDEATRAQLERGQRTMELMKQAQYQPLSVGEMAFVLFAGNEGYVDDVALDEVVRFEKALLDYLRSEHSELLQKITETGDYNDEIHSGMQQAMEQFKKNRTW,MSQLKLEEISSVIEEKIKNFELDCDMAEVGKVVSYADGVAKVYGLNGVMSYEVLEFETGDKGVAANLEEDSVGVIVFGFGNNIKEGAGVKRTKSLMKIPVGDAVVGRVLNALGEPIDGKGEIETNEFSLIEQKAPGIMDRKSVHEPLQTGIKAIDALVPIGRGQRELIIGDKQTGKTTVAIDAIINQKGQNVICIYVAIGQKESTVAQVVRKLEEYGAMEYSVVINASASDSAAMQYLAPYSGVAMGEYFRDHGRHALIVYDDLSKHAVAYREISLILRRPPGREAFPGDVFYIHSRLLERAAKLCDEKGAGSLTALPIVETQAGDVSAYIPTNIISITDGQIFLETDLFYSGIRPAINVGLSVSRVGGAAQIKATKQVSGTLRLDLAQYRELQAFTQFASDLDEASKKQLERGQRMVEVLKQAPYSPLPIEKQVVIIYAGAKGFLDSVSVKKVVDFEEQLHPFLEAKYPQILEEIYTKKALDKDLEAMLRKVLEEFKLTYSE,MQLNSTEISELIKQRIAQFNVVSEAHNEGTIVSVSDGVIRIHGLADCMQGEMISLPGNRYAIALNLERDSVGAVVMGPYADLAEGMKVKCTGRILEVPVGRGLLGRVVNTLGAPIDGKGPLDHDGFSAVEAIAPGVIERQSVDQPVQTGYKAVDSMIPIGRGQRELIIGDRQTGKTALAIDAIINQRDSGIKCIYVAIGQKASTISNVVCKLEEHGALANTIVVVATASESAALQYLAPYAGCAMGEYFRDRGEDALIIYDDLSKQAVAYRQISLLLRRPPGREAFPGDVFYLHSRLLERAARVNAEYVEAFTKGEVKGKTGSLTALPIIETQAGDVSAFVPTNVISITDGQIFLETNLFNAGIRPAVNPGISVSRVGGAAQTKIMKKLSGGIRTALAQYRELAAFSQFASDLDDATRKQLDHGQKVTELLKQKQYAPMSVAQQSLVLFAAERGYLADVELSKIGSFEAALLAYVDRDHAPLMQEINQTGGYNDEIEGKLKGILDSFKATQSW,MQLNSTEISDLIKQRIESFEVVSEARNEGTIVSVSDGIIRIHGLADVMQGEMIELPGGRYALALNLERDSVGAVVMGPYADLKEGMKVTGTGRILEVPVGPELLGRVVNTLGEPIDGKGPIEAKMTSPVEVIAPGVIDRKSVDQPVQTGYKSVDSMIPIGRGQRELIIGDRQIGKTALAIDAIINQKDSGIFSIYVAIGQKASTIANVVRKLEEHGALQNTIVVVASASESAALQYLAPYAGCAMGEYFRDRGEDALIVYDDLSKQAVAYRQISLLLKRPPGREAFPGDVFYLHSRLLERAARVNEEYVERFTNGEVKGKTGSLTALPIIETQAGDVSAFVPTNVISITDGQIFLQTELFNAGVRPAVDPGISVSRVGGSAQTKIIKKLSGGIRTALAAYRELAAFAQFSSDLDEATKKQLDHGQKVTELMKQKQYAPMSVFDQALTIFAAERGYLDDVELNKVLDFEAALLSYARGQYAELAAEIDKSGAYNDEIEAQLKKLTDDFKATQTW,MEIRPAEISEILKKQIASFDTETDVAETGQVLSVGDGIARVFGLANVMAGEMVEFPNAGVQGMALNLENDNVGVVVFGDDKAIREGDTVTRTRRIVDVPVGKGLLGRVVDALGNPIDGKGPIEATERRLVETKAPGIIPRKSVHEPMQTGVKSIDALIPIGRGQRELVIGDRQTGKTAIIVDTFINQKPLNAQDDESKKLYCIYVAVGQKRSTVAQLVRTLEENGAMEYSIVIAATASEPAPMQFLAPYTGCAMGEYFRDNGMHALIVYDDLSKQAVAYRQMSLLLRRPPGREAYPGDVFYLHSRLLERAAKMSDEFGAGSLTALPVIETQAGDISAYIPTNVISITDGQIFLETELFFKGIRPAVNVGNSVSRVGSAAQIKAMKQVAGKIKLDLAQYREMAAFAQFASDLDASTQKLLARGARLTELLKQPQFKPLPVEEQVVSIFVGTRGYLDEVPVNRIGDFEAQLISEMKARSPEILDSIRNDREIKKETETKLVDFVKSFASSFA,MQQLNPSEISELIRARIAGFEGRVETRSQGTIISLSDGILRIHGLEDVMYGEMLELPGGRFGLAMNLEQDNVGAVVLGEFSGLQEGDVVKCTGRVMQVPIGKALLGRVVNALGQPVDGKGAIDAEEFDVLEKIAPGVIDRQSVDEPMQTGIKSIDAMVPIGRGQRELIIGDRQTGKTAVAVDAILNQKGKDVQCIYVAIGQKASTVAGVVRKLEEYGAMEYTTVIAANASESAAMQYLAPYAGCTMGEYFRDRGMNALIVYDDLTKQAWAYRQISLLLRRPPGREAYPGDVFYLHSRLLERAARVNADFVEKFTKGEVKGKTGSLTALPIIETQAGDVSAFVPTNVISITDGQIYLETDLFNAGIRPAINAGLSVSRVGGAAQTKIIKKLGGGIRLDLAQYRELAAFAQFASDLDEITRKQIERGKRVTELLKQDQFSPMSVAEQGAALFAASSGALDDVEVANVRPFEKALLAYLNSNNKELMAGIEEKKDLTDDLKKQLDAAVKQFKSGSTY,MSIRPDEISAILKDEIENYHISTELSEAGVVLSVGDGISRIYGLRDCMSGELLEFDNNVFGMALNLEQDNVGCVILGDDQGIKEGDRVRRTGRVVEVPVGEALIGRVVSALGQPIDGRGPIATDVYRPVEYPAPGIIDRQPVDTPIQTGLKAIDAMIPIGRGQRELIIGDRSTGKTALAIDTILNQRDQDVICIYVGIGQKESTIAGIVRVLEERGAMGYTIVVAASAAEPAPLQYLAPYAGCAMGEEFRDKGRDVLVVYDDLSKHAVAYRAMSLLLRRPPGREAYPGDVFYLHSRLLERAARISDEKGGGSLTALPIIETLAGDIGAYIPTNVISITDGQIFLETDLFFSGVRPAVNVGLSVSRVGGAAQIKAMRQVAGGMRLDLAQYRELAAFSQFGSDLDKATQARLARGARTVELLKQAQYQPMSVEDQVAVIFAVTKGFVDDIPVESVRDFERGLLRFLKEQRPQILDTIRREQALSDDVVRDLTQAIEEFKKTAVF"
            return seq

        }
        
        async function fetchData(urlStr){
            const res = await fetch(urlStr)
            return await res.json()
        }
        function makeLineChart(chartData, id){
            const ctx = document.getElementById(id);
            var dataParams = {
                labels: chartData.labels,
                datasets: [{
                    label: chartData.species,
                    data: chartData.val,
                    fill: false,
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0
                }]
            };
            const myChart = new Chart(ctx, {
                type: "line",
                data: dataParams,
            options: {
                maintainAspectRatio: false,
                plugins: {
                    title: {
                        display: true,
                        text: chartData.title
                    }
                },
                scales: {
                    x: {
                        beginAtZero: true
                    },
                    y: {
                        beginAtZero: false
                    }
                }
            }
            });
            return myChart
        }
        function makeScatterChart(chartData, id){
            const ctx = document.getElementById(id);
            var dataParams = {
                datasets: [{
                    label: "Group 1",
                    labels: chartData.labels,
                    data: chartData.val,
                    backgroundColor: "rgb(255, 99, 132)",
                    borderColor: "rgb(255, 99, 132)"
                },
                {
                    label: "Group 2",
                    labels: ["hmmm","lop"],
                    data: [{x: 1, y: 0},{x: -2, y: -3}],
                    borderColor: "rgb(132, 99, 255)",
                    backgroundColor: "rgb(132, 99, 255)"
                }]
            };
            let options = {
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: chartData.title
                    },
                    tooltip: {
                        callbacks: {
                            label: function(ctx) {
                                // console.log(ctx);
                                let label = ctx.dataset.labels[ctx.dataIndex];
                                label += " (" + ctx.parsed.x + ", " + ctx.parsed.y + ")";
                                return label;
                            }
                        }
                    }
                }
            }
            const myChart = new Chart(ctx, {
                type: "scatter",
                data: dataParams,
                options: options
            });
            return myChart
        }
        function makeNewChart(chartData, id, type){
            var chart;
            if (type == "line"){
                chart = makeLineChart(chartData, id);
            } else {
                chart = makeScatterChart(chartData, id);
            }
            return chart
        }
